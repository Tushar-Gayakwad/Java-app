name: Build and Push to AWS Public ECR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-west-1
      IMAGE_TAG: latest # or set this dynamically if needed
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
        
      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      # Login to Amazon ECR
      - name: Login to Amazon ECR
        #id: login-ecr
        run: |
          aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin 551364857603.dkr.ecr.us-west-1.amazonaws.com
        env:
          AWS_REGION: us-west-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

              
      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ishitadocker/ve3-projecct .

      # Tag Docker image (Optional)
      # This step can be removed if you've already tagged the image correctly during the build step.
      - name: Tag Docker Image
        run: |
          docker tag ishitadocker/ve3-projecct:latest public.ecr.aws/v1n2o2v1/ishitadocker/ve3-projecct:latest

      
      # Push Docker image to Amazon Public ECR
      #docker push ${{ secrets.PUBLIC_ECR_REPO_URL }}/my-app-image:${{ secrets.IMAGE_TAG }}
      - name: Push Docker image
        run: |
          docker push public.ecr.aws/v1n2o2v1/ishitadocker/ve3-projecct:latest
